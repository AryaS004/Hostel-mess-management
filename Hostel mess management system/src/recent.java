/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Anju
 */
public class recent extends javax.swing.JFrame {

    /**
     * Creates new form recent
     */
    public recent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hostelid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        show = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1377, 6, -1, -1));

        jLabel1.setBackground(new java.awt.Color(255, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HOSTEL ID");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 100, 20));
        getContentPane().add(hostelid, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 100, 310, -1));

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 100, 70, -1));

        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 150, 70, -1));

        show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(show);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 630, -1));

        jButton2.setBackground(new java.awt.Color(219, 219, 252));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stopp.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 20, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/241724.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, -50, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int hostelID = Integer.parseInt(hostelid.getText());
        
        // Call the method to retrieve and display recent orders
        showRecentOrders(hostelID);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int selectedRow = show.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select an order to edit.");
        return;
    }
    int orderID = (int) show.getValueAt(selectedRow, 0);
    String status = getOrderStatus(orderID);
    if ("finalized".equals(status)) {
        JOptionPane.showMessageDialog(this, "Cannot edit finalized orders.");
        return;
    }
    EditOrderDialog editDialog = new EditOrderDialog(this, orderID);
    editDialog.setVisible(true);
    }//GEN-LAST:event_editActionPerformed
    private String getOrderStatus(int orderID) {
    Connection con = null;
    PreparedStatement pat = null;
    ResultSet rs = null;
    String status = null;

    try {
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "aryasql");

        String query = "SELECT status FROM orders WHERE OrderID = ?";
        pat = con.prepareStatement(query);
        pat.setInt(1, orderID);
        rs = pat.executeQuery();

        if (rs.next()) {
            status = rs.getString("status");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        ex.printStackTrace();
    } finally {
        try {
            if (rs != null) rs.close();
            if (pat != null) pat.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    return status;
}
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = show.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select an order to delete.");
        return;
    }
    int orderID = (int) show.getValueAt(selectedRow, 0);
    deleteOrder(orderID);
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      int yes=JOptionPane.showConfirmDialog(this,"Are you sure?","Close",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(yes==JOptionPane.YES_OPTION)   
           new Homepage().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
   private void showRecentOrders(int hostelID) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Order ID");
        model.addColumn("Food ID");
        model.addColumn("Quantity");
        model.addColumn("Food Price");
        model.addColumn("Order Date");
        model.addColumn("Order time");

        Connection con = null;
        PreparedStatement pat = null;
        ResultSet rs = null;

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "aryasql");

            String query = "SELECT * FROM orders WHERE HostelerID = ? ORDER BY OrderID DESC LIMIT 10";
            pat = con.prepareStatement(query);
            pat.setInt(1, hostelID);

            rs = pat.executeQuery();

            while (rs.next()) {
                int orderID = rs.getInt("OrderID");
                int foodID = rs.getInt("FoodID");
                int quantity = rs.getInt("Quantity");
                double foodPrice = rs.getDouble("food_price");
                Date date=rs.getDate("OrderDate");
                Time time=rs.getTime("OrderDate");

                model.addRow(new Object[]{orderID, foodID, quantity, foodPrice,date,time});
            }

            show.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
                if (pat != null) pat.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new recent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JTextField hostelid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable show;
    // End of variables declaration//GEN-END:variables

    private void deleteOrder(int orderID) {
    Connection con = null;
    PreparedStatement pat = null;

    try {
        // Establish connection to the database
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "aryasql");

        // Query to check the status of the order
        String statusQuery = "SELECT status FROM orders WHERE OrderID = ?";
        PreparedStatement statusPat = con.prepareStatement(statusQuery);
        statusPat.setInt(1, orderID);
        ResultSet statusRs = statusPat.executeQuery();
        if (statusRs.next()) {
            String status = statusRs.getString("status");
            if ("finalized".equals(status)) {
                JOptionPane.showMessageDialog(this, "Cannot delete finalized order.");
                return; // Exit method if order is finalized
            }
        }

        // Query to delete the order with the given orderID
        String deleteQuery = "DELETE FROM orders WHERE OrderID = ?";
        pat = con.prepareStatement(deleteQuery);
        pat.setInt(1, orderID);

        // Execute the delete query
        int deletedRows = pat.executeUpdate();

        if (deletedRows > 0) {
            JOptionPane.showMessageDialog(this, "Order deleted successfully.");
            // Refresh the table after deletion
            showRecentOrders(Integer.parseInt(hostelid.getText()));
        } else {
            JOptionPane.showMessageDialog(this, "Failed to delete order.");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        ex.printStackTrace();
    } finally {
        try {
            // Close resources
            if (pat != null) pat.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}


    
}
