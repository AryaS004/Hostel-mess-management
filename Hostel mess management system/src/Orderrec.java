/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Anju
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
public class Orderrec extends javax.swing.JFrame {

    /**
     * Creates new form Orderrec
     */
    public Orderrec() {
        initComponents();
        displayReceivedOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        order = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(order);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 1050, -1));

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stopp.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 10, -1, 30));

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDERS");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1570, 47));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 90, -1, -1));

        search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 448, -1));

        jButton2.setText("Finalize");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, 140, -1));

        jLabel2.setText("Hostel ID :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 86, 70, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       int selectedRow = order.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select an order to finalize.");
    }
    else{  
        finalizeOrders();
    } 
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     
        searchOrders();
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int yes=JOptionPane.showConfirmDialog(this,"Are you sure?","Close",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(yes==JOptionPane.YES_OPTION)   
           new adminpage().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void displayReceivedOrders() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("OrderID");
        model.addColumn("HostelID");
        model.addColumn("FoodID");
        model.addColumn("Quantity");
        model.addColumn("Date");
        model.addColumn("Time");

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "aryasql");
            String query = "SELECT OrderID,HostelerID, FoodID, Quantity,OrderDate FROM orders WHERE status = 'received'";
            PreparedStatement pat = con.prepareStatement(query);
            ResultSet rs = pat.executeQuery();

            while (rs.next()) {
                int orderID = rs.getInt("OrderID");
                int hostelID=rs.getInt("HostelerID");
                int foodID = rs.getInt("FoodID");
                int quantity = rs.getInt("Quantity");
                Date date=rs.getDate("OrderDate");
                Time time=rs.getTime("OrderDate");
                model.addRow(new Object[]{orderID,hostelID,foodID, quantity,date,time});
            }

            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        order.setModel(model);
    }

    private void finalizeOrders() {
        // Get the selected rows from the table
        int[] selectedRows = order.getSelectedRows();

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "aryasql");
            String updateQuery = "UPDATE orders SET status = 'finalized' WHERE OrderID = ?";
            PreparedStatement pat = con.prepareStatement(updateQuery);

            // Update the status of each selected order
            for (int row : selectedRows) {
                int orderID = (int) order.getValueAt(row, 0);
                pat.setInt(1, orderID);
                pat.executeUpdate();
            }

            con.close();
            JOptionPane.showMessageDialog(this, "Selected orders finalized successfully.");
            displayReceivedOrders(); // Refresh the table after finalizing orders
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    private void searchOrders() {
    String hostelIDText = search.getText();
    if (hostelIDText.isEmpty()) {
        // If search field is empty, display all received orders
        displayReceivedOrders();
        return;
    }

    try {
        int hostelID = Integer.parseInt(hostelIDText);

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("OrderID");
        model.addColumn("HostelID");
        model.addColumn("FoodID");
        model.addColumn("Quantity");
        model.addColumn("Date");
        model.addColumn("Time");

        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "aryasql")) {
            String query = "SELECT OrderID, FoodID, Quantity, OrderDate FROM orders WHERE status = 'received' AND HostelerID = ?";
            PreparedStatement pat = con.prepareStatement(query);
            pat.setInt(1, hostelID);
            ResultSet rs = pat.executeQuery();

            if (!rs.next()) {
                // No results found, clear the table model
                order.setModel(new DefaultTableModel());
                JOptionPane.showMessageDialog(this, "No orders found for HostelID: " + hostelID);
                return;
            }

            do {
                int orderID = rs.getInt("OrderID");
                int foodID = rs.getInt("FoodID");
                int quantity = rs.getInt("Quantity");
                Date date = rs.getDate("OrderDate");
                Time time = rs.getTime("OrderDate");
                model.addRow(new Object[]{orderID, hostelID, foodID, quantity, date, time});
            } while (rs.next());
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error executing SQL query: " + ex.getMessage());
        }

        order.setModel(model);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid HostelID. Please enter a valid integer.");
    }
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orderrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orderrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orderrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orderrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orderrec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable order;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
